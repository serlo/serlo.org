{
  "name": "@serlo/serlo.org-workspace",
  "version": "0.0.0",
  "bugs": {
    "url": "https://github.com/serlo/serlo.org/issues"
  },
  "repository": "serlo/serlo.org",
  "license": "Apache-2.0",
  "author": "Serlo Education e.V.",
  "scripts": {
    "build": "lerna run --stream build",
    "deploy:images": "lerna run --stream deploy:image",
    "predeploy:packages": "lerna run --stream build --scope=@serlo/{client,frontend,static-assets} --include-filtered-dependencies",
    "deploy:packages": "lerna run --stream deploy:package",
    "deploy": "lerna run deploy",
    "dump:sql": "ts-node scripts/dump_mysql_serlo_database.ts",
    "sentry-release": "lerna run --stream sentry-release",
    "format": "npm-run-all --parallel format:*",
    "format:prettier": "yarn _prettier --write",
    "format:php": "yarn _php-cs-fixer",
    "i18n:regenerate": "i18next-scanner --config i18next.config.js",
    "lint": "npm-run-all --parallel lint:js lint:php",
    "lint:js": "npm-run-all --parallel lint:js:*",
    "lint:js:tsc": "tsc --noEmit",
    "lint:js:prettier": "yarn _prettier --check",
    "lint:php": "yarn _php-cs-fixer --dry-run",
    "license": "ts-node scripts/license-headers",
    "mysql": "docker-compose exec mysql mysql --user=root --password=secret serlo",
    "oauth": "npm-run-all -s oauth:clear oauth:client oauth:user",
    "oauth:clear": "docker-compose run hydra clients delete test_client --endpoint http://hydra:4445",
    "oauth:client": "docker-compose run hydra clients create --skip-tls-verify --endpoint http://hydra:4445 --id test_client --secret CHANGEMENOWOMG --grant-types authorization_code --response-types code --scope openid,email --callbacks http://127.0.0.1:4446/callback",
    "oauth:user": "docker-compose run -p 4446:4446 hydra token user --skip-tls-verify --client-id test_client --client-secret CHANGEMENOWOMG --port 4446 --auth-url http://localhost:4444/oauth2/auth --token-url http://hydra:4444/oauth2/token --scope openid,email",
    "rollback:sql": "ts-node scripts/rollback_mysql_serlo_database.ts",
    "test:e2e": "jest --config ./jest.config-e2e.js --maxWorkers 1",
    "test:js": "npm-run-all test:js:*",
    "test:js:client": "jest",
    "test:js:ssr": "jest --config ./jest.config-ssr.js",
    "test:php": "docker-compose run --rm server-php src/vendor/bin/phpunit",
    "migration:create": "yarn migration create -ext sql -dir /app/migrations",
    "migration:up": "yarn migration up",
    "migration": "docker-compose run --rm server-migrate m",
    "c": "docker-compose run --rm server-composer composer",
    "c-dev": "docker-compose run --rm server-composer-dev-tools composer",
    "start": "npm-run-all start:server start:client",
    "start:client": "lerna run --stream --scope=@serlo/client start",
    "prestart:server": "yarn c install && yarn c-dev install",
    "start:server": "docker-compose up --build --detach",
    "stop:server": "docker-compose stop",
    "down:server": "docker-compose down",
    "_prettier": "prettier \"{{packages/{private,public}/*/,}{.circleci,__mocks__,__tests__,__tests-e2e__,scripts,src}/**/*,*}.{js,jsx,ts,tsx,json,md,yaml,yml,css,scss}\"",
    "_php-cs-fixer": "docker-compose run --rm server-php dev-tools/vendor/bin/php-cs-fixer fix --config=php-cs-fixer.config.php"
  },
  "dependencies": {},
  "devDependencies": {
    "lerna": "^3.0.0"
  },
  "private": true,
  "workspaces": [
    "packages/private/*",
    "packages/public/*"
  ]
}
